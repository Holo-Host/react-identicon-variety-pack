{"version":3,"sources":["Identicon/renderers/utils.js","Identicon/renderers/blockies.js","Identicon/renderers/bishop.js","Identicon/renderers/discs.js","Identicon/renderers/rings.js","Identicon/renderers/network.js","Identicon/renderers/network-large.js","Identicon/Identicon.js","Identicon/useRenderIcon.js","App.js","serviceWorker.js","index.js"],"names":["getBitStream","randseed","Array","seedrand","seed","fill","i","length","charCodeAt","rand","t","createColor","h","Math","floor","s","l","encodeColor","_ref","concat","stringToBits","string","from","reduce","acc","char","toString","map","bin","repeat","join","bits","regenerator_default","a","wrap","_context","prev","next","parseInt","stop","_marked","renderIcon","opts","canvas","_buildOpts","newOpts","random","pow","size","gridSize","scale","Error","color","bgcolor","spotcolor","buildOpts","imageData","width","height","dataWidth","ceil","mirrorWidth","data","y","row","x","r","slice","reverse","push","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","outputCanvas","grid","vertical","horizontal","bitStream","split","sort","value","isUndefined","flatten","createBishopData","maxHeight","b","max","document","createElement","amt","halfCSize","occ","drawImage","numDiscs","beginPath","radius","arc","PI","gray","centers","lineWidth","strokeStyle","j","start","end","moveTo","lineTo","stroke","_centers$_i","Identicon","circle","className","canvasRef","useRef","useEffect","current","useRenderIcon","style","borderRadius","react_default","ref","Blockie","props","Object","assign","renderBlockie","Bishop","renderBishop","Discs","renderDiscs","Rings","renderRings","Network","renderNetwork","NetworkLarge","renderNetworkLarge","defaultHashes","App","_useState","useState","_useState2","slicedToArray","hashes","setHashes","_useState3","_useState4","newHash","setNewHash","_useState5","_useState6","setCircle","removeHash","hash","filter","components","Component","label","onChange","target","onClick","isEmpty","_ref2","key","_ref3","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.842a6f78.chunk.js","sourcesContent":["const randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\nexport function seedrand(seed) {\n\trandseed.fill(0);\n\n\tfor(let i = 0; i < seed.length; i++) {\n\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\n\t}\n}\n\nexport function rand() {\n\t// based on Java's String.hashCode(), expanded to 4 32bit values\n\tconst t = randseed[0] ^ (randseed[0] << 11);\n\n\trandseed[0] = randseed[1];\n\trandseed[1] = randseed[2];\n\trandseed[2] = randseed[3];\n\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\n\n\treturn (randseed[3] >>> 0) / ((1 << 31) >>> 0);\n}\n\nexport function createColor() {\n\t//saturation is the whole color spectrum\n\tconst h = Math.floor(rand() * 360);\n\t//saturation goes from 40 to 100, it avoids greyish colors\n\tconst s = ((rand() * 60) + 40);\n\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\tconst l = ((rand() + rand() + rand() + rand()) * 25);\n\n\treturn {h, s, l}\n}\n\nexport function mixColors(a, b, amt) {\n\treturn {\n\t\th: (a.h * (1 - amt)) + (b.h * amt),\n\t\ts: (a.s * (1 - amt)) + (b.s * amt),\n\t\tl: (a.l * (1 - amt)) + (b.l * amt)\n\t}\n}\n\nexport function encodeColor({ h, s, l}) {\n\treturn `hsl(${h}, ${s}%, ${l}%)`\n}\n\nexport function stringToBits(string) {\n\treturn Array\n\t\t.from(string)\n\t\t.reduce((acc, char) => acc.concat(char.charCodeAt().toString(2)), [])\n\t\t.map(bin => '0'.repeat(8 - bin.length) + bin )\n\t\t.join('')\n}\n\nexport function * getBitStream (string) {\n\tconst bits = stringToBits(string)\n\n\tfor (let i = 0; i < bits.length; i++) {\n\t\tyield parseInt(bits[i])\n\t}\n}","import { rand, seedrand, encodeColor, createColor } from './utils'\n\nfunction createImageData(size) {\n\tconst width = size // Only support square icons for now\n\tconst height = size\n\n\tconst dataWidth = Math.ceil(width / 2)\n\tconst mirrorWidth = width - dataWidth\n\n\tconst data = []\n\tfor(let y = 0; y < height; y++) {\n\t\tlet row = []\n\t\tfor(let x = 0; x < dataWidth; x++) {\n\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\n\t\t\t// spot color has 13% chance\n\t\t\trow[x] = Math.floor(rand()*2.3)\n\t\t}\n\t\tconst r = row.slice(0, mirrorWidth)\n\t\tr.reverse()\n\t\trow = row.concat(r)\n\n\t\tfor(let i = 0; i < row.length; i++) {\n\t\t\tdata.push(row[i])\n\t\t}\n\t}\n\n\treturn data\n}\n\nfunction buildOpts(opts) {\n\tconst newOpts = {};\n\n\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\tseedrand(newOpts.seed);\n\n  if (opts.size && opts.gridSize && opts.scale) {\n    throw new Error (\"Don't specify size, gridSize *and* scale. Choose two.\")    \n  }\n\n\tnewOpts.gridSize = opts.gridSize || opts.size / opts.scale || 8;\n\tnewOpts.scale = opts.scale || opts.size / opts.gridSize || 4;\n\tnewOpts.size = newOpts.size || newOpts.gridSize * newOpts.scale \t\n\tnewOpts.color = opts.color || encodeColor(createColor())\n\tnewOpts.bgcolor = opts.bgcolor || encodeColor(createColor())\n\tnewOpts.spotcolor = opts.spotcolor || encodeColor(createColor())\n\n\treturn newOpts;\n}\n\nexport default function renderIcon(opts, canvas) {\n\tconst { gridSize, size, scale, color, spotcolor, bgcolor } = buildOpts(opts || {});\n\tconst imageData = createImageData(gridSize);\n\tconst width = Math.sqrt(imageData.length);\n\n\tcanvas.width = canvas.height = size\n\n\tconst cc = canvas.getContext('2d');\n\tcc.fillStyle = bgcolor;\n\tcc.fillRect(0, 0, canvas.width, canvas.height);\n\tcc.fillStyle = color;\n\n\tfor(let i = 0; i < imageData.length; i++) {\n\n\t\t// if data is 0, leave the background\n\t\tif(imageData[i]) {\n\t\t\tconst row = Math.floor(i / width);\n\t\t\tconst col = i % width;\n\n\t\t\t// if data is 2, choose spot color, if 1 choose foreground\n\t\t\tcc.fillStyle = (imageData[i] === 1) ? color : spotcolor;\n\n\t\t\tcc.fillRect(col * scale, row * scale, scale, scale);\n\t\t}\n\t}\n\n\treturn canvas;\n}","import { flatten, isUndefined } from 'lodash'\nimport { rand, getBitStream, seedrand, encodeColor, mixColors, createColor } from './utils'\n\nfunction buildOpts(opts) {\n\tconst newOpts = {};\n\n\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\tseedrand(newOpts.seed);\n\n  if (opts.size && opts.gridSize && opts.scale) {\n    throw new Error (\"Don't specify size, gridSize *and* scale. Choose two.\")    \n  }\n\n\tnewOpts.gridSize = opts.gridSize || opts.size / opts.scale || 8;\n\tnewOpts.scale = opts.scale || opts.size / opts.gridSize || 4;\n\tnewOpts.size = newOpts.size || newOpts.gridSize * newOpts.scale \t\t\n\tnewOpts.color = opts.color || createColor();\n\tnewOpts.bgcolor = opts.bgcolor || createColor();\n\n\treturn newOpts;\n}\n\nfunction createBishopData(size, seed) {\n\tconst grid = new Array(size).fill(0).map(() => new Array(size).fill(0))\n\tlet x = Math.floor(rand() * size)\n\tlet y = Math.floor(rand() * size)\n\tgrid[x][y] = grid[x][y] + 1\n\n\tconst scrambledSeed = seed.split('').sort(() => rand() - 0.5).join('')\n\tconst bitStream = getBitStream(scrambledSeed)\n\tlet vertical\n\tlet horizontal\t\n\tdo  {\n\t\tvertical = bitStream.next().value\n\t\thorizontal = bitStream.next().value\t\t\n\t\tif (horizontal === 0) {\n\t\t\tif (x > 0) {\n\t\t\t\tx--\n\t\t\t}\n\t\t} else {\n\t\t\tif (x < size -1) {\n\t\t\t\tx++\n\t\t\t}\n\t\t}\n\n\t\tif (vertical === 0) {\n\t\t\tif (y > 0) {\n\t\t\t\ty--\n\t\t\t}\n\t\t} else {\n\t\t\tif (y < size -1) {\n\t\t\t\ty++\n\t\t\t}\n\t\t}\n\n\t\tgrid[x][y] = grid[x][y] + 1\n\t} while (!isUndefined(vertical) && !isUndefined(horizontal))\n\n\n\treturn flatten(grid.map(col => col.reverse()))\n}\n\nexport default function renderIcon(opts, outputCanvas) {\n\tconst { size, gridSize, scale, seed, color, bgcolor } = buildOpts(opts || {})\n\tconst imageData = createBishopData(gridSize, seed)\n\tconst width = Math.sqrt(imageData.length);\n\n\tconst maxHeight = imageData.reduce((a, b) => Math.max(a, b))\n\n\tvar canvas = document.createElement('canvas')\n\n\tcanvas.width = canvas.height = size\n\n\tconst cc = canvas.getContext('2d');\n\tcc.fillStyle = encodeColor(bgcolor);\n\tcc.fillRect(0, 0, canvas.width, canvas.height);\n\n\tfor(let i = 0; i < imageData.length; i++) {\n\t\t// if data is 0, leave the background\n\t\tif(imageData[i]) {\n\t\t\tconst row = Math.floor(i / width);\n\t\t\tconst col = i % width;\n\n\t\t\tcc.fillStyle = encodeColor(mixColors(bgcolor, color, imageData[i]/maxHeight))\n\n\t\t\tcc.fillRect(col * scale, row * scale, scale, scale);\n\t\t\t// cc.arc(col * opts.scale, row * opts.scale, opts.scale, 0, Math.PI * 2);\t\t\t\n\t\t}\n\t}\n\n\toutputCanvas.width = outputCanvas.height = size\n\tconst halfCSize = size/2\n\tconst occ = outputCanvas.getContext('2d')\n\tocc.drawImage(canvas, 0, 0, halfCSize, halfCSize)\n\tocc.scale(-1, 1)\n\tocc.drawImage(canvas, -size, 0, halfCSize, halfCSize)\n\tocc.scale(1, -1)\n\tocc.drawImage(outputCanvas, -size, -size)\n\n\treturn outputCanvas\n}","import { rand, seedrand, encodeColor, createColor } from './utils'\n\nfunction buildOpts(opts) {\n\tconst newOpts = {};\n\n\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\tseedrand(newOpts.seed);\n\n  if (opts.size && opts.gridSize && opts.scale) {\n    throw new Error (\"Don't specify size, gridSize *and* scale. Choose two.\")    \n  }\n\n\tnewOpts.gridSize = opts.gridSize || opts.size / opts.scale || 8;\n\tnewOpts.scale = opts.scale || opts.size / opts.gridSize || 4;\n\tnewOpts.size = newOpts.size || newOpts.gridSize * newOpts.scale \t\n\treturn newOpts;\n}\n\nexport default function renderIcon(opts, canvas) {\n\tconst { size } = buildOpts(opts || {});\n\n\tcanvas.width = canvas.height = size\n\n\tconst cc = canvas.getContext('2d');\n\tcc.fillStyle = encodeColor({h: 0, s: 0, l: 100*rand()})\n\tcc.fillRect(0, 0, canvas.width, canvas.height);\n  const numDiscs = 3 + (rand() * 10)\n  for (let i = 0; i < numDiscs; i++) {\n    cc.fillStyle = encodeColor(createColor())\n    cc.beginPath();\n    let radius\n    if (i < 2) {\n      radius = rand() * size\n    } else {\n      radius = rand() * size * 0.125\n    }\n    cc.arc(rand()*size, rand()*size, radius, 0, 2*Math.PI)\n    cc.fill()\n  }\n\n\treturn canvas;\n}","import { rand, seedrand, encodeColor, createColor } from './utils'\n\nfunction buildOpts(opts) {\n\tconst newOpts = {};\n\n\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\tseedrand(newOpts.seed);\n\n  if (opts.size && opts.gridSize && opts.scale) {\n    throw new Error (\"Don't specify size, gridSize *and* scale. Choose two.\")    \n  }\n\n\tnewOpts.gridSize = opts.gridSize || opts.size / opts.scale || 8;\n\tnewOpts.scale = opts.scale || opts.size / opts.gridSize || 4;\n\tnewOpts.size = newOpts.size || newOpts.gridSize * newOpts.scale \t\n\n\treturn newOpts;\n}\n\nexport default function renderIcon(opts, canvas) {\n\tconst { size } = buildOpts(opts || {});\n\n\tcanvas.width = canvas.height = size\n\n\tconst cc = canvas.getContext('2d');\n\tcc.fillStyle = encodeColor({h: 0, s: 0, l: 100*rand()})\n\tcc.fillRect(0, 0, canvas.width, canvas.height);\n  let radius = size/2\n  while (radius > 1) {\n    cc.fillStyle = encodeColor(createColor())\n    cc.beginPath()\n    cc.arc(size/2, size/2, radius, 0, 2*Math.PI)\n    cc.fill()\n    radius = radius - (size/8 * rand())\n  }\n\n\treturn canvas;\n}","import { rand, seedrand, encodeColor, createColor } from './utils'\n\nfunction buildOpts(opts) {\n\tconst newOpts = {};\n\n\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\tseedrand(newOpts.seed);\n\n  if (opts.size && opts.gridSize && opts.scale) {\n    throw new Error (\"Don't specify size, gridSize *and* scale. Choose two.\")    \n  }\n\n\tnewOpts.gridSize = opts.gridSize || opts.size / opts.scale || 8;\n\tnewOpts.scale = opts.scale || opts.size / opts.gridSize || 4;\n  newOpts.size = newOpts.size || newOpts.gridSize * newOpts.scale \n\n\treturn newOpts;\n}\n\nexport default function renderIcon(opts, canvas) {\n  opts = buildOpts(opts || {});\n  const { size } = opts\n\n\tcanvas.width = canvas.height = size\n\n  const cc = canvas.getContext('2d')\n  const gray = 100 * rand()\n\tcc.fillStyle = encodeColor({h: 0, s: 0, l: gray})\n\tcc.fillRect(0, 0, canvas.width, canvas.height)\n  const numDiscs = 3 + (rand() * 10)\n  const centers = []\n  for (let i = 0; i < numDiscs; i++) {\n    centers.push({\n      x: rand() * size,\n      y: rand() * size\n    })\n  }\n\n  cc.lineWidth = 0.5\n  if (gray < 50) {\n    cc.strokeStyle = \"#FFFFFF\"\n  } else {\n    cc.strokeStyle = \"#000000\"    \n  }\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 2; j++) {\n      const start = centers[Math.floor(centers.length * rand())]\n      const end = centers[Math.floor(centers.length * rand())]\n      cc.beginPath()\n      cc.moveTo(start.x, start.y)\n      cc.lineTo(end.x, end.y)      \n      cc.stroke()\n    }\n  }\n\n  for (let i = 0; i < numDiscs; i++) {\n    const { x, y } = centers[i]\n    cc.fillStyle = encodeColor(createColor())\n    cc.beginPath();\n    let radius = 3 + (rand() * size * 0.1)\n    cc.arc(x, y, radius, 0, 2*Math.PI)\n    cc.fill()\n  }\n\n\treturn canvas;\n}","import { rand, seedrand, encodeColor, createColor } from './utils'\n\nfunction buildOpts(opts) {\n\tconst newOpts = {};\n\n\tnewOpts.seed = opts.seed || Math.floor((Math.random() * Math.pow(10,16))).toString(16);\n\n\tseedrand(newOpts.seed);\n\n  if (opts.size && opts.gridSize && opts.scale) {\n    throw new Error (\"Don't specify size, gridSize *and* scale. Choose two.\")    \n  }\n\n\tnewOpts.gridSize = opts.gridSize || opts.size / opts.scale || 8;\n\tnewOpts.scale = opts.scale || opts.size / opts.gridSize || 4;\n  newOpts.size = newOpts.size || newOpts.gridSize * newOpts.scale \n\n\treturn newOpts;\n}\n\nexport default function renderIcon(opts, canvas) {\n\tconst { size } = buildOpts(opts || {});\n\n\tcanvas.width = canvas.height = size\n\n  const cc = canvas.getContext('2d');\n  const gray = 100 * rand()\n\tcc.fillStyle = encodeColor({h: 0, s: 0, l: gray})\n\tcc.fillRect(0, 0, canvas.width, canvas.height);\n  const numDiscs = 3 + (rand() * 10)\n  const centers = []\n  for (let i = 0; i < numDiscs; i++) {\n    centers.push({\n      x: rand() * size,\n      y: rand() * size\n    })\n  }\n\n  cc.lineWidth = 0.5\n  if (gray < 50) {\n    cc.strokeStyle = \"#FFFFFF\"\n  } else {\n    cc.strokeStyle = \"#000000\"    \n  }\n\n  for (let i = 0; i < numDiscs; i++) {\n    const { x, y } = centers[i]\n    cc.fillStyle = encodeColor(createColor())\n    cc.beginPath();\n    let radius\n    if (i < 2) {\n      radius = rand() * size\n    } else {\n      radius = rand() * size * 0.125\n    }\n    cc.arc(x, y, radius, 0, 2*Math.PI)\n    cc.fill()\n\n    for (let j = 0; j < 2; j++) {\n      const start = centers[Math.floor(centers.length * rand())]\n      const end = centers[Math.floor(centers.length * rand())]\n      cc.beginPath()\n      cc.moveTo(start.x, start.y)\n      cc.lineTo(end.x, end.y)      \n      cc.stroke()\n    }\n  }\n\n\treturn canvas;\n}","import React, { useRef } from 'react';\nimport useRenderIcon from './useRenderIcon'\nimport renderBlockie from './renderers/blockies'\nimport renderBishop from './renderers/bishop'\nimport renderDiscs from './renderers/discs'\nimport renderRings from './renderers/rings'\nimport renderNetwork from './renderers/network'\nimport renderNetworkLarge from './renderers/network-large'\n\nexport default function Identicon ({ renderIcon, seed, size, gridSize, scale, circle, className }) {\n  const canvasRef = useRef(null)\n  useRenderIcon(renderIcon, { seed, size, gridSize, scale }, canvasRef)\n\n  const style = circle ? {borderRadius: '50%'} : {}\n\n  return <canvas className={className} style={style} ref={canvasRef} width={1} height={1} />\n}\n\nexport function Blockie (props) {\n  return <Identicon {...props} renderIcon={renderBlockie} />\n}\n\nexport function Bishop (props) {\n  return <Identicon {...props} renderIcon={renderBishop} />\n}\n\nexport function Discs (props) {\n  return <Identicon {...props} renderIcon={renderDiscs} />\n}\n\nexport function Rings (props) {\n  return <Identicon {...props} renderIcon={renderRings} />\n}\n\nexport function Network (props) {\n  return <Identicon {...props} renderIcon={renderNetwork} />\n}\n\nexport function NetworkLarge (props) {\n  return <Identicon {...props} renderIcon={renderNetworkLarge} />\n}\n\n","import { useEffect } from 'react'\n\nexport default function useRenderIcon (renderIcon, opts, canvasRef) {\n\tuseEffect(() => {\n\t\tif (canvasRef.current) {\n\t\t\trenderIcon(opts, canvasRef.current)\n\t\t}\n\t})\n}","import React, { useState } from 'react'\nimport './App.css'\nimport { Bishop, Blockie, Discs, Rings, Network, NetworkLarge } from './Identicon'\nimport { isEmpty } from 'lodash'\n\nconst defaultHashes = [\n  \"QmaDraiSDBesNvg7UMwrVyew4PVsWBvy6xMabqvbozyP5z\",\n  \"QmYXml2PSuj3uxrcc5bVUYYYrppYigvMAyAQAd4GwW4ez9\",\n  \"QmePKNAWyh4F5DDmfZV2efh7JBrGmSw1xzRndX9kskoFAM\",\n  \"dsajdksaduihf\",\n  \"HcSCiy9XxO7bkvspb63Jw3ekinYx9aJnhJpoj94jFKwxiHZFYEm5AXxott6bPI9\"\n]\n\nconst size = 128\nconst gridSize = 8\n\nfunction App() {\n  const [hashes, setHashes] = useState(defaultHashes)\n  const [newHash, setNewHash] = useState('')\n  const [circle, setCircle] = useState(true)  \n\n  const addNewHash = () => {\n    setHashes([newHash].concat(hashes))\n    setNewHash('')\n  }\n\n  const removeHash = hash => () => {\n    setHashes(hashes.filter(h => h !== hash))\n  }\n\n  const components = [\n    { Component: Network, label: 'Network' },\n    { Component: Bishop, label: 'Bishop' },\n    { Component: Rings, label: 'Rings' },\n    { Component: Blockie, label: 'Blockie' },\n    { Component: NetworkLarge, label: 'Network Large' },\n    { Component: Discs, label: 'Discs' }\n  ]\n\n  return <div className='app'>\n    <div className='control-row'>\n      <div className='control-box'>\n        <div className='input-row'>\n          <input\n            className='input'\n            value={newHash}\n            onChange={({ target: { value }}) => setNewHash(value)} />\n          <button onClick={addNewHash}>Add</button>\n        </div>\n        <div>\n          <button onClick={() => setCircle(!circle)}>{circle ? 'Square' : 'Circle'}</button>\n        </div>\n      </div>\n      {!isEmpty(newHash) && components.map(({ Component }, i) => \n        <Component className='identicon' size={size} gridSize={gridSize} seed={newHash} circle={circle} key={i} /> \n      )}\n    </div>\n    {components.map(({ Component, label }, i) => \n      <div key={i} className='identicon-row'>\n        {hashes.map(hash =>\n          <Component className='identicon'size={size} gridSize={gridSize} seed={hash} key={hash} circle={circle} />\n        )}\n        <div className='identicon-label'>{label}</div>\n      </div>\n    )}  \n    <div>\n      <h4>Hashes - Click to remove from list</h4>\n      {hashes.map(hash =>\n        <div key={hash} onClick={removeHash(hash)}>\n          {hash}\n        </div>\n      )}\n    </div>\n  </div>\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}